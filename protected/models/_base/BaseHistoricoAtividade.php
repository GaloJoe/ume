<?php

/**
 * This is the model base class for the table "historico_atividade".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HistoricoAtividade".
 *
 * Columns in table "historico_atividade" available as properties of the model,
 * followed by relations of table "historico_atividade" available as properties of the model.
 *
 * @property integer $id
 * @property integer $atividade
 * @property integer $referencia
 * @property integer $quantidade
 * @property double $retencao
 * @property integer $recibo
 * @property string $data
 * @property integer $usuario
 * @property integer $empreiteiro
 * @property integer $ativo
 *
 * @property Usuario $usuario0
 * @property Usuario $empreiteiro0
 * @property Atividade $atividade0
 */
abstract class BaseHistoricoAtividade extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'historico_atividade';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Histórico da Atividade|Histórico de Atividades', $n);
    }

    public static function representingColumn() {
        return 'data';
    }

    public function rules() {
        return array(
            array('atividade, data, retencao, usuario, empreiteiro, atividade, ativo', 'required'),
            array('atividade, referencia, quantidade, usuario, empreiteiro, atividade, ativo, recibo', 'numerical', 'integerOnly' => true),
            array('retencao', 'numerical'),
            array('referencia, quantidade, recibo', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, atividade, referencia, quantidade, recibo, retencao, data, usuario, empreiteiro, atividade, ativo', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'usuario0' => array(self::BELONGS_TO, 'Usuario', 'usuario'),
            'empreiteiro0' => array(self::BELONGS_TO, 'Usuario', 'empreiteiro'),
            'atividade0' => array(self::BELONGS_TO, 'Atividade', 'atividade'),
            'recibo0' => array(self::BELONGS_TO, 'Recibo', 'recibo'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'atividade' => null,
            'referencia' => Yii::t('app', 'Referencia'),
            'quantidade' => Yii::t('app', 'Quantidade'),
            'retencao' => Yii::t('app', 'Retenção'),
            'ativo' => Yii::t('app', 'Ativo'),
            'data' => Yii::t('app', 'Data'),
            'usuario' => null,
            'usuario0' => null,
            'empreiteiro' => Yii::t('app', 'Empreiteiro'),
            'empreiteiro0' => null,
            'recibo0' => null,
            'atividade0' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('atividade', $this->atividade);
        $criteria->compare('referencia', $this->referencia);
        $criteria->compare('quantidade', $this->quantidade);
        $criteria->compare('retencao', $this->retencao);
        $criteria->compare('recibo', $this->recibo);
        $criteria->compare('data', $this->data, true);
        $criteria->compare('usuario', $this->usuario);
        $criteria->compare('empreiteiro', $this->empreiteiro);
        $criteria->compare('ativo', 1);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
    
}
