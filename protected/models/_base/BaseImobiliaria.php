<?php

/**
 * This is the model base class for the table "imobiliaria".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Imobiliaria".
 *
 * Columns in table "imobiliaria" available as properties of the model,
 * followed by relations of table "imobiliaria" available as properties of the model.
 *
 * @property integer $id
 * @property string $nome
 * @property string $endereco
 * @property string $telefone
 *
 * @property Usuario[] $usuarios
 */
abstract class BaseImobiliaria extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'imobiliaria';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Imobiliária|Imobiliárias', $n);
    }

    public static function representingColumn() {
        return 'nome';
    }

    public function rules() {
        return array(
            array('nome, endereco, telefone, ativo', 'required'),
            array('nome', 'length', 'max' => 50),
            array('endereco', 'length', 'max' => 200),
            array('telefone', 'length', 'max' => 16),
            array('id, nome, endereco, telefone, ativo', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'usuarios' => array(self::HAS_MANY, 'Usuario', 'imobiliaria'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'nome' => Yii::t('app', 'Nome'),
            'endereco' => Yii::t('app', 'Endereço'),
            'telefone' => Yii::t('app', 'Telefone'),
            'usuarios' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nome', $this->nome, true);
        $criteria->compare('endereco', $this->endereco, true);
        $criteria->compare('telefone', $this->telefone, true);
        $criteria->compare('ativo', 1, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort'=>array(
                'defaultOrder'=>'t.nome',
            ),
        ));
    }

}
