<?php

/**
 * This is the model base class for the table "retencao".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Retencao".
 *
 * Columns in table "retencao" available as properties of the model,
 * followed by relations of table "retencao" available as properties of the model.
 *
 * @property integer $id
 * @property double $valor
 * @property string $data
 * @property integer $recibo
 * @property integer $usuario
 * @property integer $ativo
 *
 * @property Usuario $usuario0
 * @property Recibo $recibo0
 */
abstract class BaseRetencao extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'retencao';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Retenção|Retenções', $n);
    }

    public static function representingColumn() {
        return 'data';
    }

    public function rules() {
        return array(
            array('valor,  recibo, usuario, ativo', 'required'),
            array('recibo, usuario, ativo', 'numerical', 'integerOnly' => true),
            array('valor', 'numerical'),
            array('id, valor, data, recibo, usuario, ativo, empreiteiro', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'usuario0' => array(self::BELONGS_TO, 'Usuario', 'usuario'),
            'recibo0' => array(self::BELONGS_TO, 'Recibo', 'recibo'),
            'empreiteiro0' => array(self::HAS_MANY, 'Empreiteiro', array('empreiteiro0' => 'id'), 'through' => 'recibo0'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'valor' => Yii::t('app', 'Valor'),
            'data' => Yii::t('app', 'Data'),
            'recibo' => null,
            'usuario' => null,
            'ativo' => Yii::t('app', 'Ativo'),
            'usuario0' => null,
            'recibo0' => null,
            'empreiteiro0' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('valor', $this->valor);
        $criteria->compare('data', $this->data, true);
        $criteria->compare('recibo', $this->recibo);
        $criteria->compare('usuario', $this->usuario);
        $criteria->compare('ativo', 1);

        $criteria->join .= ' LEFT OUTER JOIN recibo as recibo0 ON recibo0.id = t.recibo';
        $criteria->join .= ' LEFT OUTER JOIN usuario as empreiteiro0 ON empreiteiro0.id = recibo0.empreiteiro';

        $criteria->compare('empreiteiro0.id', $this->recibo0->empreiteiro, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort' => array(
                'defaultOrder' => 'data DESC',
            ),
        ));
    }

}
